import { useSnapshot } from 'valtio';
import { useCallback, useEffect, useState } from 'react';
import { FlatList, View } from 'react-native';
import { ApiController, AssetUtil } from '@web3modal/core-react-native';
import { CardSelect, CardSelectHeight, CardSelectLoader, FlexView, IconBox, Spacing, Text } from '@web3modal/ui-react-native';
import { useCustomDimensions } from '../../hooks/useCustomDimensions';
import styles from './styles';
export function AllWalletsSearch({
  searchQuery,
  columns,
  itemWidth,
  onItemPress
}) {
  const [loading, setLoading] = useState(false);
  const {
    search,
    installed
  } = useSnapshot(ApiController.state);
  const [prevSearchQuery, setPrevSearchQuery] = useState('');
  const imageHeaders = ApiController._getApiHeaders();
  const {
    maxWidth,
    padding,
    isLandscape
  } = useCustomDimensions();
  const ITEM_HEIGHT = CardSelectHeight + Spacing.xs * 2;
  const walletTemplate = ({
    item
  }) => {
    const isInstalled = installed.find(wallet => wallet?.id === item?.id);
    return /*#__PURE__*/React.createElement(View, {
      key: item?.id,
      style: [styles.itemContainer, {
        width: itemWidth
      }]
    }, /*#__PURE__*/React.createElement(CardSelect, {
      imageSrc: AssetUtil.getWalletImage(item),
      imageHeaders: imageHeaders,
      name: item?.name ?? 'Unknown',
      onPress: () => onItemPress(item),
      installed: !!isInstalled
    }));
  };
  const loadingTemplate = items => {
    return /*#__PURE__*/React.createElement(FlexView, {
      flexDirection: "row",
      flexWrap: "wrap",
      alignSelf: "center",
      padding: ['0', '0', 's', 'xs'],
      style: [styles.container, {
        maxWidth
      }]
    }, Array.from({
      length: items
    }).map((_, index) => /*#__PURE__*/React.createElement(View, {
      key: index,
      style: [styles.itemContainer, {
        width: itemWidth
      }]
    }, /*#__PURE__*/React.createElement(CardSelectLoader, null))));
  };
  const emptyTemplate = () => {
    return /*#__PURE__*/React.createElement(FlexView, {
      alignItems: "center",
      style: [styles.emptyContainer, isLandscape && styles.emptyLandscape]
    }, /*#__PURE__*/React.createElement(IconBox, {
      icon: "walletPlaceholder",
      background: true,
      size: "lg",
      iconColor: "fg-200",
      backgroundColor: "gray-glass-005"
    }), /*#__PURE__*/React.createElement(Text, {
      variant: "paragraph-500",
      color: "fg-200",
      style: styles.text
    }, "No wallet found"));
  };
  const searchFetch = useCallback(async () => {
    setLoading(true);
    await ApiController.searchWallet({
      search: searchQuery
    });
    setLoading(false);
  }, [searchQuery]);
  useEffect(() => {
    if (prevSearchQuery !== searchQuery) {
      setPrevSearchQuery(searchQuery || '');
      searchFetch();
    }
  }, [searchQuery, prevSearchQuery, searchFetch]);
  if (loading) {
    return loadingTemplate(20);
  }
  if (search.length === 0) {
    return emptyTemplate();
  }
  return /*#__PURE__*/React.createElement(FlatList, {
    key: columns,
    fadingEdgeLength: 20,
    bounces: false,
    numColumns: columns,
    data: search,
    renderItem: walletTemplate,
    style: styles.container,
    contentContainerStyle: [styles.contentContainer, {
      paddingHorizontal: padding + Spacing.xs
    }],
    ListEmptyComponent: emptyTemplate(),
    keyExtractor: item => item.id,
    getItemLayout: (_, index) => ({
      length: ITEM_HEIGHT,
      offset: ITEM_HEIGHT * index,
      index
    })
  });
}
//# sourceMappingURL=index.js.map