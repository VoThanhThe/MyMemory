"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Web3Modal = Web3Modal;
var _valtio = require("valtio");
var _react = require("react");
var _reactNative = require("react-native");
var _reactNativeModal = _interopRequireDefault(require("react-native-modal"));
var _uiReactNative = require("@web3modal/ui-react-native");
var _coreReactNative = require("@web3modal/core-react-native");
var _w3mRouter = require("../w3m-router");
var _w3mHeader = require("../../partials/w3m-header");
var _w3mSnackbar = require("../../partials/w3m-snackbar");
var _useCustomDimensions = require("../../hooks/useCustomDimensions");
var _styles = _interopRequireDefault(require("./styles"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function Web3Modal() {
  const {
    open
  } = (0, _valtio.useSnapshot)(_coreReactNative.ModalController.state);
  const {
    history
  } = (0, _valtio.useSnapshot)(_coreReactNative.RouterController.state);
  const {
    height
  } = (0, _reactNative.useWindowDimensions)();
  const {
    isLandscape
  } = (0, _useCustomDimensions.useCustomDimensions)();
  const portraitHeight = height - 120;
  const landScapeHeight = height * 0.95 - (_reactNative.StatusBar.currentHeight ?? 0);
  const onBackButtonPress = () => {
    if (history.length > 1) {
      return _coreReactNative.RouterController.goBack();
    }
    return _coreReactNative.ModalController.close();
  };
  const prefetch = async () => {
    await _coreReactNative.ApiController.prefetch();
    _coreReactNative.EventsController.sendEvent({
      type: 'track',
      event: 'MODAL_LOADED'
    });
  };
  (0, _react.useEffect)(() => {
    prefetch();
  }, []);
  return /*#__PURE__*/React.createElement(_reactNativeModal.default, {
    style: _styles.default.modal,
    isVisible: open,
    useNativeDriver: true,
    statusBarTranslucent: true,
    hideModalContentWhileAnimating: true,
    propagateSwipe: true,
    onBackdropPress: _coreReactNative.ModalController.close,
    onBackButtonPress: onBackButtonPress
  }, /*#__PURE__*/React.createElement(_uiReactNative.Card, {
    style: [_styles.default.card, {
      maxHeight: isLandscape ? landScapeHeight : portraitHeight
    }]
  }, /*#__PURE__*/React.createElement(_w3mHeader.Header, null), /*#__PURE__*/React.createElement(_w3mRouter.Web3Router, null), /*#__PURE__*/React.createElement(_w3mSnackbar.Snackbar, null)));
}
//# sourceMappingURL=index.js.map