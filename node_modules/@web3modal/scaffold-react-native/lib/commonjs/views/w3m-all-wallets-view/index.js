"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AllWalletsView = AllWalletsView;
var _react = require("react");
var _valtio = require("valtio");
var _coreReactNative = require("@web3modal/core-react-native");
var _uiReactNative = require("@web3modal/ui-react-native");
var _styles = _interopRequireDefault(require("./styles"));
var _useDebounceCallback = require("../../hooks/useDebounceCallback");
var _w3mAllWalletsList = require("../../partials/w3m-all-wallets-list");
var _w3mAllWalletsSearch = require("../../partials/w3m-all-wallets-search");
var _useCustomDimensions = require("../../hooks/useCustomDimensions");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function AllWalletsView() {
  const Theme = (0, _uiReactNative.useTheme)();
  const {
    connectors
  } = (0, _valtio.useSnapshot)(_coreReactNative.ConnectorController.state);
  const [searchQuery, setSearchQuery] = (0, _react.useState)('');
  const {
    maxWidth
  } = (0, _useCustomDimensions.useCustomDimensions)();
  const numColumns = 4;
  const usableWidth = maxWidth - _uiReactNative.Spacing.xs * 2;
  const itemWidth = Math.abs(Math.trunc(usableWidth / numColumns));
  const onInputChange = (0, _useDebounceCallback.useDebounceCallback)({
    callback: setSearchQuery
  });
  const onWalletPress = wallet => {
    const connector = connectors.find(c => c.explorerId === wallet.id);
    if (connector) {
      _coreReactNative.RouterController.push('ConnectingExternal', {
        connector,
        wallet
      });
    } else {
      _coreReactNative.RouterController.push('ConnectingWalletConnect', {
        wallet
      });
    }
    _coreReactNative.EventsController.sendEvent({
      type: 'track',
      event: 'SELECT_WALLET',
      properties: {
        name: wallet.name ?? 'Unknown',
        platform: 'mobile'
      }
    });
  };
  const onQrCodePress = () => {
    _coreReactNative.ConnectionController.removePressedWallet();
    _coreReactNative.ConnectionController.removeWcLinking();
    _coreReactNative.RouterController.push('ConnectingWalletConnect');
    _coreReactNative.EventsController.sendEvent({
      type: 'track',
      event: 'SELECT_WALLET',
      properties: {
        name: 'WalletConnect',
        platform: 'qrcode'
      }
    });
  };
  const headerTemplate = () => {
    return /*#__PURE__*/React.createElement(_uiReactNative.FlexView, {
      padding: ['s', 'l', 'xs', 'l'],
      flexDirection: "row",
      alignItems: "center",
      style: [_styles.default.header, {
        backgroundColor: Theme['bg-125'],
        shadowColor: Theme['bg-125'],
        width: maxWidth
      }]
    }, /*#__PURE__*/React.createElement(_uiReactNative.SearchBar, {
      onChangeText: onInputChange,
      testID: "input-search"
    }), /*#__PURE__*/React.createElement(_uiReactNative.IconLink, {
      icon: "qrCode",
      iconColor: "accent-100",
      pressedColor: "accent-glass-020",
      backgroundColor: "accent-glass-010",
      size: "lg",
      onPress: onQrCodePress,
      style: [_styles.default.icon, {
        borderColor: Theme['accent-glass-010']
      }],
      testID: "button-qr-code"
    }));
  };
  const listTemplate = () => {
    if (searchQuery) {
      return /*#__PURE__*/React.createElement(_w3mAllWalletsSearch.AllWalletsSearch, {
        columns: numColumns,
        itemWidth: itemWidth,
        searchQuery: searchQuery,
        onItemPress: onWalletPress
      });
    }
    return /*#__PURE__*/React.createElement(_w3mAllWalletsList.AllWalletsList, {
      columns: numColumns,
      itemWidth: itemWidth,
      onItemPress: onWalletPress
    });
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, headerTemplate(), listTemplate());
}
//# sourceMappingURL=index.js.map