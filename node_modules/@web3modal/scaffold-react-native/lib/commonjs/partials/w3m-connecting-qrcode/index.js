"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConnectingQrCode = ConnectingQrCode;
var _valtio = require("valtio");
var _coreReactNative = require("@web3modal/core-react-native");
var _uiReactNative = require("@web3modal/ui-react-native");
var _useCustomDimensions = require("../../hooks/useCustomDimensions");
var _styles = _interopRequireDefault(require("./styles"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function ConnectingQrCode() {
  const {
    wcUri
  } = (0, _valtio.useSnapshot)(_coreReactNative.ConnectionController.state);
  const showCopy = _coreReactNative.OptionsController.isClipboardAvailable();
  const {
    maxWidth: windowSize,
    isPortrait
  } = (0, _useCustomDimensions.useCustomDimensions)();
  const qrSize = (windowSize - _uiReactNative.Spacing.xl * 2) / (isPortrait ? 1 : 1.5);
  const onCopyAddress = () => {
    if (wcUri) {
      _coreReactNative.OptionsController.copyToClipboard(wcUri);
      _coreReactNative.SnackController.showSuccess('Link copied');
    }
  };
  return /*#__PURE__*/React.createElement(_uiReactNative.FlexView, {
    alignItems: "center",
    justifyContent: "center",
    flexDirection: isPortrait ? 'column' : 'row',
    padding: ['xl', 'xl', '2xl', 'xl']
  }, /*#__PURE__*/React.createElement(_uiReactNative.QrCode, {
    size: qrSize,
    uri: wcUri,
    testID: "qr-code"
  }), /*#__PURE__*/React.createElement(_uiReactNative.FlexView, {
    alignItems: "center",
    margin: "m"
  }, /*#__PURE__*/React.createElement(_uiReactNative.Text, {
    variant: "paragraph-500"
  }, "Scan this QR code with your phone"), showCopy && /*#__PURE__*/React.createElement(_uiReactNative.Link, {
    iconLeft: "copySmall",
    color: "fg-200",
    style: _styles.default.copyButton,
    onPress: onCopyAddress,
    testID: "button-copy-uri"
  }, "Copy link")));
}
//# sourceMappingURL=index.js.map