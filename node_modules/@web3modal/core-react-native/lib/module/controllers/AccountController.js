import { proxy } from 'valtio';
import { subscribeKey as subKey } from 'valtio/utils';
import { CoreHelperUtil } from '../utils/CoreHelperUtil';

// -- Types --------------------------------------------- //

// -- State --------------------------------------------- //
const state = proxy({
  isConnected: false
});

// -- Controller ---------------------------------------- //
export const AccountController = {
  state,
  subscribeConnection(callback) {
    return subKey(state, 'isConnected', callback);
  },
  setIsConnected(isConnected) {
    state.isConnected = isConnected;
  },
  setCaipAddress(caipAddress) {
    const address = caipAddress ? CoreHelperUtil.getPlainAddress(caipAddress) : undefined;
    state.caipAddress = caipAddress;
    state.address = address;
  },
  setBalance(balance, balanceSymbol) {
    state.balance = balance;
    state.balanceSymbol = balanceSymbol;
  },
  setProfileName(profileName) {
    state.profileName = profileName;
  },
  setProfileImage(profileImage) {
    state.profileImage = profileImage;
  },
  setAddressExplorerUrl(explorerUrl) {
    state.addressExplorerUrl = explorerUrl;
  },
  resetAccount() {
    state.isConnected = false;
    state.caipAddress = undefined;
    state.address = undefined;
    state.balance = undefined;
    state.balanceSymbol = undefined;
    state.profileName = undefined;
    state.profileImage = undefined;
    state.addressExplorerUrl = undefined;
  }
};
//# sourceMappingURL=AccountController.js.map