import { proxy, ref } from 'valtio';
import { PublicStateController } from './PublicStateController';

// -- Types --------------------------------------------- //

// -- State --------------------------------------------- //
const state = proxy({
  supportsAllNetworks: true,
  isDefaultCaipNetwork: false
});

// -- Controller ---------------------------------------- //
export const NetworkController = {
  state,
  _getClient() {
    if (!state._client) {
      throw new Error('NetworkController client not set');
    }
    return state._client;
  },
  setClient(client) {
    state._client = ref(client);
  },
  setCaipNetwork(caipNetwork) {
    state.caipNetwork = caipNetwork;
    PublicStateController.set({
      selectedNetworkId: caipNetwork?.id
    });
  },
  setDefaultCaipNetwork(caipNetwork) {
    state.caipNetwork = caipNetwork;
    state.isDefaultCaipNetwork = true;
    PublicStateController.set({
      selectedNetworkId: caipNetwork?.id
    });
  },
  setRequestedCaipNetworks(requestedNetworks) {
    state.requestedCaipNetworks = requestedNetworks;
  },
  async getApprovedCaipNetworksData() {
    const data = await this._getClient().getApprovedCaipNetworksData();
    state.supportsAllNetworks = data.supportsAllNetworks;
    state.approvedCaipNetworkIds = data.approvedCaipNetworkIds;
  },
  async switchActiveNetwork(network) {
    await this._getClient().switchCaipNetwork(network);
    state.caipNetwork = network;
    PublicStateController.set({
      selectedNetworkId: network?.id
    });
  },
  resetNetwork() {
    if (!state.isDefaultCaipNetwork) {
      state.caipNetwork = undefined;
    }
    state.approvedCaipNetworkIds = undefined;
    state.supportsAllNetworks = true;
  }
};
//# sourceMappingURL=NetworkController.js.map