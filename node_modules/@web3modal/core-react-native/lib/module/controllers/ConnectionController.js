import { subscribeKey as subKey } from 'valtio/utils';
import { proxy, ref } from 'valtio';
import { CoreHelperUtil } from '../utils/CoreHelperUtil';
import { StorageUtil } from '../utils/StorageUtil';
import { RouterController } from './RouterController';

// -- Types --------------------------------------------- //

// -- State --------------------------------------------- //
const state = proxy({
  wcError: false
});

// -- Controller ---------------------------------------- //
export const ConnectionController = {
  state,
  subscribeKey(key, callback) {
    return subKey(state, key, callback);
  },
  _getClient() {
    if (!state._client) {
      throw new Error('ConnectionController client not set');
    }
    return state._client;
  },
  setClient(client) {
    state._client = ref(client);
  },
  connectWalletConnect() {
    state.wcPromise = this._getClient().connectWalletConnect(uri => {
      state.wcUri = uri;
      state.wcPairingExpiry = CoreHelperUtil.getPairingExpiry();
      StorageUtil.setConnectedConnector('WALLET_CONNECT');
    });
  },
  async connectExternal(options) {
    await this._getClient().connectExternal?.(options);
    await StorageUtil.setConnectedConnector(options.type);
  },
  resetWcConnection() {
    state.wcUri = undefined;
    state.wcPairingExpiry = undefined;
    state.wcPromise = undefined;
    state.wcLinking = undefined;
    state.pressedWallet = undefined;
    StorageUtil.removeWalletConnectDeepLink();
    StorageUtil.removeConnectedConnector();
  },
  setWcLinking(wcLinking) {
    state.wcLinking = wcLinking;
  },
  removeWcLinking() {
    state.wcLinking = undefined;
  },
  setWcError(wcError) {
    state.wcError = wcError;
  },
  setPressedWallet(wallet) {
    state.pressedWallet = wallet;
  },
  removePressedWallet() {
    state.pressedWallet = undefined;
  },
  setRecentWallets(wallets) {
    state.recentWallets = wallets;
  },
  async disconnect() {
    await this._getClient().disconnect();
    this.resetWcConnection();
    RouterController.reset('Connect');
  }
};
//# sourceMappingURL=ConnectionController.js.map