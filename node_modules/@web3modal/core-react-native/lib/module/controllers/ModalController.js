import { proxy } from 'valtio';
import { AccountController } from './AccountController';
import { RouterController } from './RouterController';
import { PublicStateController } from './PublicStateController';
import { EventsController } from './EventsController';
import { ApiController } from './ApiController';

// -- Types --------------------------------------------- //

// -- State --------------------------------------------- //
const state = proxy({
  open: false,
  loading: false
});

// -- Controller ---------------------------------------- //
export const ModalController = {
  state,
  async open(options) {
    await ApiController.state.prefetchPromise;
    const connected = AccountController.state.isConnected;
    if (options?.view) {
      RouterController.reset(options.view);
    } else if (AccountController.state.isConnected) {
      RouterController.reset('Account');
    } else {
      RouterController.reset('Connect');
    }
    state.open = true;
    PublicStateController.set({
      open: true
    });
    EventsController.sendEvent({
      type: 'track',
      event: 'MODAL_OPEN',
      properties: {
        connected
      }
    });
  },
  close() {
    const connected = AccountController.state.isConnected;
    state.open = false;
    PublicStateController.set({
      open: false
    });
    EventsController.sendEvent({
      type: 'track',
      event: 'MODAL_CLOSE',
      properties: {
        connected
      }
    });
  },
  setLoading(loading) {
    state.loading = loading;
  }
};
//# sourceMappingURL=ModalController.js.map