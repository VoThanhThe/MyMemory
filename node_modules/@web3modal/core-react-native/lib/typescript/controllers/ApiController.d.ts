import type { ApiGetWalletsRequest, WcWallet } from '../utils/TypeUtil';
export interface ApiControllerState {
    prefetchPromise?: Promise<unknown>;
    page: number;
    count: number;
    featured: WcWallet[];
    recommended: WcWallet[];
    installed: WcWallet[];
    wallets: WcWallet[];
    search: WcWallet[];
}
export declare const ApiController: {
    state: ApiControllerState;
    platform(): string;
    subscribeKey<K extends keyof ApiControllerState>(key: K, callback: (value: ApiControllerState[K]) => void): () => void;
    _getApiHeaders(): {
        'x-project-id': string;
        'x-sdk-type': string;
        'x-sdk-version': `react-native-${string}`;
        'User-Agent': string;
    };
    _fetchWalletImage(imageId: string): Promise<void>;
    _fetchConnectorImage(imageId: string): Promise<void>;
    _fetchNetworkImage(imageId: string): Promise<void>;
    fetchConnectorImages(): Promise<void>;
    fetchNetworkImages(): Promise<void>;
    fetchInstalledWallets(): Promise<void>;
    fetchFeaturedWallets(): Promise<void>;
    fetchRecommendedWallets(): Promise<void>;
    fetchWallets({ page }: Pick<ApiGetWalletsRequest, 'page'>): Promise<void>;
    searchWallet({ search }: Pick<ApiGetWalletsRequest, 'search'>): Promise<void>;
    prefetch(): Promise<void>;
    fetchAnalyticsConfig(): Promise<void>;
};
//# sourceMappingURL=ApiController.d.ts.map