import { type Provider } from '@web3modal/scaffold-utils-react-native';
export { W3mAccountButton, W3mButton, W3mConnectButton, W3mNetworkButton, Web3Modal } from '@web3modal/scaffold-react-native';
export { defaultConfig } from './utils/defaultConfig';
import type { Web3ModalOptions } from './client';
import { Web3Modal } from './client';
export type { Web3ModalOptions } from './client';
type OpenOptions = Parameters<Web3Modal['open']>[0];
export declare function createWeb3Modal(options: Web3ModalOptions): Web3Modal;
export declare function useWeb3Modal(): {
    open: (options?: OpenOptions) => Promise<void>;
    close: () => Promise<void>;
};
export declare function useWeb3ModalState(): {
    selectedNetworkId: number | undefined;
    open: boolean;
};
export declare function useWeb3ModalProvider(): {
    walletProvider: Provider | undefined;
    walletProviderType: "WALLET_CONNECT" | "COINBASE" | "EMAIL" | "EXTERNAL" | undefined;
};
export declare function useDisconnect(): {
    disconnect: () => Promise<void>;
};
export declare function useWeb3ModalAccount(): {
    address: `0x${string}` | undefined;
    isConnected: boolean;
    chainId: number | undefined;
};
export declare function useWeb3ModalError(): {
    error: unknown;
};
export declare function useWeb3ModalEvents(): {
    timestamp: number;
    data: import("@web3modal/scaffold-react-native").Event;
};
//# sourceMappingURL=index.d.ts.map