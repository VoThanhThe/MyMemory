"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardSelectWidth = exports.CardSelectHeight = exports.CardSelect = void 0;
var _react = require("react");
var _reactNative = require("react-native");
var _wuiText = require("../../components/wui-text");
var _wuiIconBox = require("../wui-icon-box");
var _useAnimatedValue = _interopRequireDefault(require("../../hooks/useAnimatedValue"));
var _useTheme = require("../../hooks/useTheme");
var _wuiNetworkImage = require("../wui-network-image");
var _wuiWalletImage = require("../wui-wallet-image");
var _styles = _interopRequireWildcard(require("./styles"));
var _UiUtil = require("../../utils/UiUtil");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const AnimatedPressable = _reactNative.Animated.createAnimatedComponent(_reactNative.Pressable);
const CardSelectHeight = exports.CardSelectHeight = _styles.ITEM_HEIGHT;
const CardSelectWidth = exports.CardSelectWidth = _styles.ITEM_WIDTH;
function _CardSelect({
  name,
  type = 'wallet',
  imageSrc,
  imageHeaders,
  onPress,
  disabled,
  installed,
  selected,
  style
}) {
  const Theme = (0, _useTheme.useTheme)();
  const normalbackgroundColor = (0, _styles.getBackgroundColor)({
    selected,
    disabled,
    pressed: false
  });
  const pressedBackgroundColor = (0, _styles.getBackgroundColor)({
    selected,
    disabled,
    pressed: true
  });
  const {
    animatedValue,
    setStartValue,
    setEndValue
  } = (0, _useAnimatedValue.default)(Theme[normalbackgroundColor], Theme[pressedBackgroundColor]);
  const textColor = disabled ? 'fg-300' : selected ? 'accent-100' : 'fg-100';
  const Image = type === 'wallet' ? _wuiWalletImage.WalletImage : _wuiNetworkImage.NetworkImage;
  const templateInstalled = () => {
    if (!installed) return null;
    return /*#__PURE__*/React.createElement(_wuiIconBox.IconBox, {
      icon: "checkmark",
      iconSize: "xs",
      iconColor: 'success-100',
      border: true,
      borderSize: 6,
      borderColor: "bg-150",
      background: true,
      backgroundColor: "icon-box-bg-success-100",
      size: "sm",
      style: _styles.default.installedBox
    });
  };
  return /*#__PURE__*/React.createElement(AnimatedPressable, {
    onPress: onPress,
    onPressIn: setEndValue,
    onPressOut: setStartValue,
    disabled: disabled,
    style: [_styles.default.container, {
      backgroundColor: animatedValue
    }, style]
  }, /*#__PURE__*/React.createElement(_reactNative.View, null, /*#__PURE__*/React.createElement(Image, {
    imageSrc: imageSrc,
    imageHeaders: imageHeaders,
    size: "md",
    style: disabled && _styles.default.disabledImage,
    selected: selected,
    disabled: disabled
  }), templateInstalled()), /*#__PURE__*/React.createElement(_wuiText.Text, {
    variant: "tiny-500",
    color: textColor,
    style: _styles.default.text,
    numberOfLines: 1
  }, _UiUtil.UiUtil.getWalletName(name)));
}
const CardSelect = exports.CardSelect = /*#__PURE__*/(0, _react.memo)(_CardSelect, (prevProps, nextProps) => {
  return prevProps.name === nextProps.name;
});
//# sourceMappingURL=index.js.map