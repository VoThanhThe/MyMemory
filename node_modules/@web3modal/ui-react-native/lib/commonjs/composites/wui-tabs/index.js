"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tabs = Tabs;
var _react = require("react");
var _reactNative = require("react-native");
var _wuiIcon = require("../../components/wui-icon");
var _wuiText = require("../../components/wui-text");
var _useTheme = require("../../hooks/useTheme");
var _styles = _interopRequireDefault(require("./styles"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function Tabs({
  tabs,
  onTabChange
}) {
  const Theme = (0, _useTheme.useTheme)();
  const [activeTab, setActiveTab] = (0, _react.useState)(0);
  const animatedPosition = (0, _react.useRef)(new _reactNative.Animated.Value(0));
  const onTabPress = index => {
    setActiveTab(index);
    onTabChange(index);
    _reactNative.Animated.timing(animatedPosition.current, {
      toValue: index,
      duration: 120,
      useNativeDriver: false
    }).start();
  };
  const markPosition = animatedPosition.current.interpolate({
    inputRange: [0, tabs.length - 1],
    outputRange: [0, 100 * (tabs.length - 1)]
  });
  return /*#__PURE__*/React.createElement(_reactNative.View, {
    style: [_styles.default.container, {
      backgroundColor: Theme['gray-glass-002']
    }]
  }, /*#__PURE__*/React.createElement(_reactNative.Animated.View, {
    style: [_styles.default.activeMark, {
      backgroundColor: Theme['gray-glass-005'],
      borderColor: Theme['gray-glass-005'],
      left: markPosition
    }]
  }), tabs.map((option, index) => {
    const isActive = index === activeTab;
    return /*#__PURE__*/React.createElement(_reactNative.Pressable, {
      onPress: () => onTabPress(index),
      key: option.label,
      style: _styles.default.tabItem
    }, option.icon && /*#__PURE__*/React.createElement(_wuiIcon.Icon, {
      name: option.icon,
      size: "xs",
      color: isActive ? 'fg-100' : 'fg-200',
      style: _styles.default.tabIcon
    }), /*#__PURE__*/React.createElement(_wuiText.Text, {
      variant: "small-600",
      color: isActive ? 'fg-100' : 'fg-200'
    }, option.label));
  }));
}
//# sourceMappingURL=index.js.map