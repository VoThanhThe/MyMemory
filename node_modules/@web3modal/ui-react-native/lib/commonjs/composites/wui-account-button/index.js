"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AccountButton = AccountButton;
var _reactNative = require("react-native");
var _wuiImage = require("../../components/wui-image");
var _wuiText = require("../../components/wui-text");
var _useAnimatedValue = _interopRequireDefault(require("../../hooks/useAnimatedValue"));
var _useTheme = require("../../hooks/useTheme");
var _UiUtil = require("../../utils/UiUtil");
var _wuiAvatar = require("../wui-avatar");
var _wuiIconBox = require("../wui-icon-box");
var _styles = _interopRequireDefault(require("./styles"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const AnimatedPressable = _reactNative.Animated.createAnimatedComponent(_reactNative.Pressable);
function AccountButton({
  networkSrc,
  imageHeaders,
  avatarSrc,
  address,
  isProfileName,
  balance,
  onPress,
  disabled,
  style,
  testID
}) {
  const Theme = (0, _useTheme.useTheme)();
  const {
    animatedValue,
    setStartValue,
    setEndValue
  } = (0, _useAnimatedValue.default)(Theme['gray-glass-002'], Theme['gray-glass-010']);
  function balanceTemplate() {
    if (balance) {
      const network = networkSrc ? /*#__PURE__*/React.createElement(_wuiImage.Image, {
        source: networkSrc,
        headers: imageHeaders,
        style: [_styles.default.image, {
          borderColor: Theme['gray-glass-005']
        }]
      }) : /*#__PURE__*/React.createElement(_wuiIconBox.IconBox, {
        icon: "networkPlaceholder",
        size: "sm",
        iconColor: "fg-200",
        background: true,
        border: true,
        style: {
          borderColor: Theme['gray-glass-005']
        }
      });
      return /*#__PURE__*/React.createElement(_reactNative.View, {
        style: _styles.default.networkContainer
      }, network, /*#__PURE__*/React.createElement(_wuiText.Text, {
        variant: "paragraph-600",
        color: "fg-100",
        style: _styles.default.balance
      }, balance));
    }
    return null;
  }
  return /*#__PURE__*/React.createElement(AnimatedPressable, {
    onPress: onPress,
    onPressIn: setEndValue,
    onPressOut: setStartValue,
    disabled: disabled,
    testID: testID,
    style: [_styles.default.container, {
      backgroundColor: animatedValue,
      borderColor: Theme['gray-glass-005']
    }, style]
  }, balanceTemplate(), /*#__PURE__*/React.createElement(_reactNative.View, {
    style: [_styles.default.addressContainer, {
      backgroundColor: Theme['gray-glass-005'],
      borderColor: Theme['gray-glass-005']
    }]
  }, /*#__PURE__*/React.createElement(_wuiAvatar.Avatar, {
    imageSrc: avatarSrc,
    address: address,
    size: 20,
    borderWidth: 2,
    style: [_styles.default.image, !avatarSrc && _styles.default.avatarPlaceholder]
  }), address && /*#__PURE__*/React.createElement(_wuiText.Text, {
    variant: "paragraph-500",
    color: "fg-200",
    style: _styles.default.address
  }, _UiUtil.UiUtil.getTruncateString({
    string: address,
    charsStart: isProfileName ? 18 : 4,
    charsEnd: isProfileName ? 0 : 6,
    truncate: isProfileName ? 'end' : 'middle'
  }))));
}
//# sourceMappingURL=index.js.map