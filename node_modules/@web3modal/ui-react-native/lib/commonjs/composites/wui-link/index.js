"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Link = Link;
var _reactNative = require("react-native");
var _wuiIcon = require("../../components/wui-icon");
var _wuiText = require("../../components/wui-text");
var _useAnimatedValue = _interopRequireDefault(require("../../hooks/useAnimatedValue"));
var _useTheme = require("../../hooks/useTheme");
var _styles = _interopRequireDefault(require("./styles"));
var _wuiFlex = require("../../layout/wui-flex");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
const AnimatedPressable = _reactNative.Animated.createAnimatedComponent(_reactNative.Pressable);
function Link({
  children,
  disabled,
  iconLeft,
  iconRight,
  onPress,
  style,
  size = 'sm',
  color,
  ...rest
}) {
  const Theme = (0, _useTheme.useTheme)();
  const _color = disabled ? 'bg-300' : color ?? 'accent-100';
  const iconSize = size === 'md' ? 'sm' : 'xs';
  const {
    animatedValue,
    setStartValue,
    setEndValue
  } = (0, _useAnimatedValue.default)('transparent', Theme['gray-glass-010']);
  return /*#__PURE__*/React.createElement(AnimatedPressable, _extends({
    disabled: disabled,
    onPress: onPress,
    onPressIn: setEndValue,
    onPressOut: setStartValue,
    style: [_styles.default[`${size}Container`], {
      backgroundColor: animatedValue
    }, style]
  }, rest), /*#__PURE__*/React.createElement(_wuiFlex.FlexView, {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "center"
  }, iconLeft && /*#__PURE__*/React.createElement(_wuiIcon.Icon, {
    color: _color,
    name: iconLeft,
    size: iconSize,
    style: _styles.default.iconLeft
  }), /*#__PURE__*/React.createElement(_wuiText.Text, {
    variant: size === 'md' ? 'paragraph-600' : 'small-600',
    color: _color
  }, children), iconRight && /*#__PURE__*/React.createElement(_wuiIcon.Icon, {
    color: _color,
    name: iconRight,
    size: iconSize,
    style: _styles.default.iconRight
  })));
}
//# sourceMappingURL=index.js.map