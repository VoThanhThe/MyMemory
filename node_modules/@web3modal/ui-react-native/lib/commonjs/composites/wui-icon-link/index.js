"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconLink = IconLink;
var _reactNative = require("react-native");
var _wuiIcon = require("../../components/wui-icon");
var _useAnimatedValue = _interopRequireDefault(require("../../hooks/useAnimatedValue"));
var _useTheme = require("../../hooks/useTheme");
var _styles = _interopRequireDefault(require("./styles"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const AnimatedPressable = _reactNative.Animated.createAnimatedComponent(_reactNative.Pressable);
function IconLink({
  icon,
  onPress,
  size = 'md',
  iconColor = 'fg-100',
  backgroundColor,
  pressedColor = 'gray-glass-010',
  disabled,
  style,
  testID
}) {
  const Theme = (0, _useTheme.useTheme)();
  const bgColor = backgroundColor ? Theme[backgroundColor] : 'transparent';
  const {
    animatedValue,
    setStartValue,
    setEndValue
  } = (0, _useAnimatedValue.default)(bgColor, Theme[pressedColor]);
  return /*#__PURE__*/React.createElement(AnimatedPressable, {
    onPress: onPress,
    onPressIn: setEndValue,
    onPressOut: setStartValue,
    disabled: disabled,
    testID: testID,
    style: [_styles.default.container, _styles.default[`container-${size}`], {
      backgroundColor: animatedValue
    }, style]
  }, /*#__PURE__*/React.createElement(_wuiIcon.Icon, {
    name: icon,
    size: size,
    color: disabled ? 'gray-glass-020' : iconColor
  }));
}
//# sourceMappingURL=index.js.map