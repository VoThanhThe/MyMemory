"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LoadingSpinner = LoadingSpinner;
var _react = require("react");
var _reactNative = require("react-native");
var _reactNativeSvg = _interopRequireWildcard(require("react-native-svg"));
var _useTheme = require("../../hooks/useTheme");
var _ThemeUtil = require("../../utils/ThemeUtil");
var _styles = _interopRequireDefault(require("./styles"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const AnimatedSvg = _reactNative.Animated.createAnimatedComponent(_reactNativeSvg.default);
function LoadingSpinner({
  color,
  style,
  size = 'lg'
}) {
  const Theme = (0, _useTheme.useTheme)();
  const spinValue = (0, _react.useRef)(new _reactNative.Animated.Value(0));
  const stroke = color ? Theme[color] : Theme['accent-100'];
  (0, _react.useEffect)(() => {
    const animation = _reactNative.Animated.timing(spinValue.current, {
      toValue: 1,
      duration: 800,
      useNativeDriver: true,
      easing: _reactNative.Easing.linear
    });
    const loop = _reactNative.Animated.loop(animation);
    loop.start();
    return () => {
      loop.stop();
    };
  }, [spinValue]);
  const spin = spinValue.current.interpolate({
    inputRange: [0, 1],
    outputRange: ['0deg', '360deg']
  });
  return /*#__PURE__*/React.createElement(_reactNative.View, {
    style: [_styles.default.container, style]
  }, /*#__PURE__*/React.createElement(AnimatedSvg, {
    width: _ThemeUtil.SpinnerSize[size],
    height: _ThemeUtil.SpinnerSize[size],
    viewBox: "25 25 50 50",
    style: {
      transform: [{
        rotate: spin
      }]
    }
  }, /*#__PURE__*/React.createElement(_reactNativeSvg.Circle, {
    r: 20,
    cy: 50,
    cx: 50,
    stroke: stroke,
    strokeWidth: 4,
    fill: "transparent",
    strokeDasharray: `90 124`
  })));
}
//# sourceMappingURL=index.js.map