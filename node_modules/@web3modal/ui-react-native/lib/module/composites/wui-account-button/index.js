import { Animated, Pressable, View } from 'react-native';
import { Image } from '../../components/wui-image';
import { Text } from '../../components/wui-text';
import useAnimatedValue from '../../hooks/useAnimatedValue';
import { useTheme } from '../../hooks/useTheme';
import { UiUtil } from '../../utils/UiUtil';
import { Avatar } from '../wui-avatar';
import { IconBox } from '../wui-icon-box';
import styles from './styles';
const AnimatedPressable = Animated.createAnimatedComponent(Pressable);
export function AccountButton({
  networkSrc,
  imageHeaders,
  avatarSrc,
  address,
  isProfileName,
  balance,
  onPress,
  disabled,
  style,
  testID
}) {
  const Theme = useTheme();
  const {
    animatedValue,
    setStartValue,
    setEndValue
  } = useAnimatedValue(Theme['gray-glass-002'], Theme['gray-glass-010']);
  function balanceTemplate() {
    if (balance) {
      const network = networkSrc ? /*#__PURE__*/React.createElement(Image, {
        source: networkSrc,
        headers: imageHeaders,
        style: [styles.image, {
          borderColor: Theme['gray-glass-005']
        }]
      }) : /*#__PURE__*/React.createElement(IconBox, {
        icon: "networkPlaceholder",
        size: "sm",
        iconColor: "fg-200",
        background: true,
        border: true,
        style: {
          borderColor: Theme['gray-glass-005']
        }
      });
      return /*#__PURE__*/React.createElement(View, {
        style: styles.networkContainer
      }, network, /*#__PURE__*/React.createElement(Text, {
        variant: "paragraph-600",
        color: "fg-100",
        style: styles.balance
      }, balance));
    }
    return null;
  }
  return /*#__PURE__*/React.createElement(AnimatedPressable, {
    onPress: onPress,
    onPressIn: setEndValue,
    onPressOut: setStartValue,
    disabled: disabled,
    testID: testID,
    style: [styles.container, {
      backgroundColor: animatedValue,
      borderColor: Theme['gray-glass-005']
    }, style]
  }, balanceTemplate(), /*#__PURE__*/React.createElement(View, {
    style: [styles.addressContainer, {
      backgroundColor: Theme['gray-glass-005'],
      borderColor: Theme['gray-glass-005']
    }]
  }, /*#__PURE__*/React.createElement(Avatar, {
    imageSrc: avatarSrc,
    address: address,
    size: 20,
    borderWidth: 2,
    style: [styles.image, !avatarSrc && styles.avatarPlaceholder]
  }), address && /*#__PURE__*/React.createElement(Text, {
    variant: "paragraph-500",
    color: "fg-200",
    style: styles.address
  }, UiUtil.getTruncateString({
    string: address,
    charsStart: isProfileName ? 18 : 4,
    charsEnd: isProfileName ? 0 : 6,
    truncate: isProfileName ? 'end' : 'middle'
  }))));
}
//# sourceMappingURL=index.js.map