import { Animated, Pressable } from 'react-native';
import { Image } from '../../components/wui-image';
import { Text } from '../../components/wui-text';
import { useTheme } from '../../hooks/useTheme';
import { IconBox } from '../wui-icon-box';
import styles from './styles';
import useAnimatedValue from '../../hooks/useAnimatedValue';
const AnimatedPressable = Animated.createAnimatedComponent(Pressable);
export function NetworkButton({
  imageSrc,
  imageHeaders,
  disabled,
  onPress,
  style,
  children
}) {
  const Theme = useTheme();
  const textColor = disabled ? 'fg-300' : 'fg-100';
  const borderColor = disabled ? 'gray-glass-005' : 'gray-glass-010';
  const {
    animatedValue,
    setStartValue,
    setEndValue
  } = useAnimatedValue(Theme['gray-glass-002'], Theme['gray-glass-010']);
  const backgroundColor = disabled ? Theme['gray-glass-020'] : animatedValue;
  return /*#__PURE__*/React.createElement(AnimatedPressable, {
    style: [styles.container, {
      backgroundColor,
      borderColor: Theme[borderColor]
    }, style],
    onPress: onPress,
    onPressIn: setEndValue,
    onPressOut: setStartValue,
    disabled: disabled
  }, imageSrc ? /*#__PURE__*/React.createElement(Image, {
    style: [styles.image, {
      borderColor: Theme[borderColor]
    }, disabled && styles.imageDisabled],
    source: imageSrc,
    headers: imageHeaders
  }) : /*#__PURE__*/React.createElement(IconBox, {
    icon: "networkPlaceholder",
    background: true,
    iconColor: textColor,
    size: "sm"
  }), /*#__PURE__*/React.createElement(Text, {
    style: styles.text,
    variant: "paragraph-600",
    color: textColor
  }, children));
}
//# sourceMappingURL=index.js.map