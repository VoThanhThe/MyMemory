import { Animated, Pressable, View } from 'react-native';
import { Text } from '../../components/wui-text';
import useAnimatedValue from '../../hooks/useAnimatedValue';
import { useTheme } from '../../hooks/useTheme';
import { Tag } from '../wui-tag';
import { WalletImage } from '../wui-wallet-image';
import { Icon } from '../../components/wui-icon';
import styles from './styles';
import { IconBox } from '../wui-icon-box';
const AnimatedPressable = Animated.createAnimatedComponent(Pressable);
export function ListWallet({
  name,
  onPress,
  imageSrc,
  imageHeaders,
  showAllWallets,
  tagLabel,
  tagVariant,
  icon,
  disabled,
  installed,
  style,
  testID
}) {
  const Theme = useTheme();
  const {
    animatedValue,
    setStartValue,
    setEndValue
  } = useAnimatedValue(Theme['gray-glass-002'], Theme['gray-glass-010']);
  const templateInstalled = () => {
    if (!installed) return null;
    return /*#__PURE__*/React.createElement(IconBox, {
      icon: "checkmark",
      iconSize: "xxs",
      iconColor: 'success-100',
      border: true,
      borderColor: "bg-150",
      background: true,
      backgroundColor: "icon-box-bg-success-100",
      size: "sm",
      style: styles.installedBox
    });
  };
  function imageTemplate() {
    return /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(WalletImage, {
      style: [styles.image, disabled && styles.imageDisabled],
      imageSrc: imageSrc,
      imageHeaders: imageHeaders,
      showAllWallets: showAllWallets,
      size: "sm"
    }), templateInstalled());
  }
  function iconTemplate() {
    if (tagLabel && tagVariant) {
      return /*#__PURE__*/React.createElement(Tag, {
        variant: tagVariant,
        disabled: disabled,
        style: styles.rightIcon
      }, tagLabel);
    }
    if (icon) {
      return /*#__PURE__*/React.createElement(Icon, {
        name: icon,
        color: disabled ? 'fg-300' : 'fg-200',
        size: "sm",
        style: styles.rightIcon
      });
    }
    return null;
  }
  return /*#__PURE__*/React.createElement(AnimatedPressable, {
    style: [styles.container, {
      backgroundColor: disabled ? Theme['gray-glass-010'] : animatedValue
    }, style],
    disabled: disabled,
    onPress: onPress,
    onPressIn: setEndValue,
    onPressOut: setStartValue,
    testID: testID
  }, /*#__PURE__*/React.createElement(View, {
    style: styles.leftSide
  }, imageTemplate(), /*#__PURE__*/React.createElement(Text, {
    variant: "paragraph-500",
    style: styles.name,
    color: disabled ? 'fg-300' : 'fg-100'
  }, name)), iconTemplate());
}
//# sourceMappingURL=index.js.map